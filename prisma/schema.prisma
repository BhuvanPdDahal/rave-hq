generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model Account {
    id                String  @id @default(auto()) @map("_id") @db.ObjectId
    userId            String  @unique @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model User {
    id            String    @id @default(auto()) @map("_id") @db.ObjectId
    name          String?
    email         String    @unique
    password      String?
    image         String?
    emailVerified DateTime?
    joinedAt      DateTime  @default(now())
    updatedAt     DateTime  @updatedAt

    account Account?
    apps    App[]
}

model VerificationToken {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    email     String   @unique
    token     String
    expiresAt DateTime
}

model App {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    name      String
    userId    String   @db.ObjectId
    hashedKey String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    testimonials Testimonial[]

    @@unique([userId, name])
    @@index(fields: [userId])
}

model Testimonial {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    appId     String   @db.ObjectId
    feedback  String
    rating    Int
    email     String
    givenAt   DateTime @default(now())
    updatedAt DateTime @updatedAt

    app App @relation(fields: [appId], references: [id], onDelete: Cascade)

    @@unique([appId, email])
}

model ApiKeyRecoveryToken {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    appId     String   @unique
    token     String
    expiresAt DateTime
}
